:: PassageHeader
<<set $passagePrev to $passage ? $passage : "none">>
<<set $passage to $passageOverride ? $passageOverride : passage()>>
<<set $tags to tags()>>

<<if !["Start", "Start2", "Clothes Testing", "Renderer Test Page", "Tips"].includes($passage) && !$bypassHeader>>
	<<doVersionCheck>>
	<<if !["Settings", "Asylum Settings", "Cabin Settings", "Wolf Cave Settings", "Farm Settings", "Livestock Settings", "Prison Settings"].includes($passage)>>
		<<if $passagePrev isnot $passage>>
			<<set $passageChangesCount to $passageChangesCount ? $passageChangesCount + 1 : 1>>
		<</if>>
		<<set $passageCount to $passageCount ? $passageCount + 1 : 1>>
	<</if>>
<</if>>

/* Catch time desyncs for debugging*/
<<if $debug is 1>>
	<<checkTimeSystem "Header">>
<</if>>

<<unset $passageOverride>>
<<unset $bypassHeader>>

:: Widgets VersionCheck [widget]
<<widget "doVersionCheck">>
	/* Run stuff on every save load */
	<<if onLoadUpdateCheck>>
		<<set $saveVersion to ($saveVersions ? $saveVersions.last() : "ancient")>> /*update save version */
	<</if>>

	/* Run stuff on every page refresh, save load, or version mismatch */
	<<if versionUpdateCheck or onLoadUpdateCheck or !$saveVersions or $saveVersions.last() isnot StartConfig.version>>
		<<set versionUpdateCheck to false>>
		<<set onLoadUpdateCheck to false>>

		/* convert game version to numeric value for use in <<backComp>> */
		<<set _version to ($saveVersions ? $saveVersions.last().replace(/[^0-9.]+/g, "").split(".") : 0)>>
		<<set _version to (_version ? _version[0]*1000000 + _version[1]*10000 + _version[2]*100 + _version[3]*1 : 0)>>
		<<backComp>>

		<<updatehistorycontrols>>
		<<set _preventUpdate to true>> /*prevent rewriting autosaves */
		<<if $reducedLineHeight is true>><<addclass "#passages" "reducedLineHeight">><</if>>
		<<run zoom($zoom, true)>> <!-- Pass the save's $zoom into the set zoom func, with second arg true, to either correct it to 100, or between 50 and 200. (Sanitisation) -->
		<<run syncFavourites()>>
		<<run initCustomLenses()>>	/* push custom eyelenses inside setup.colours.eyes; on every load/refresh it needs to be done. */
		<<run syncDebugAddedEvents()>>
	<</if>>

	/* Variables that you need to check on every passage */
	<<set $link_table to []>>
	<<set $map.hideLinksCheck to []>>
	/* Determine if the player is in a safe passage. Used to catch softlocks */
	<<if setup.majorAreas.includes($passage)>>
		<<set $safePassage to $passage>>
	<</if>>
<</widget>>
